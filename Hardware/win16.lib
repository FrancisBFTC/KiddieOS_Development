; ===============================================
; KiddieOS - Window Interface Library
; Created by Francis
; Version 1.2.0
; ===============================================

%IFNDEF _WIN16_LIB
%DEFINE _WIN16_LIB

%DEFINE WIN_SEGMENT 0C00h
%DEFINE WIN_OFFSET  WINDOW
%DEFINE WIN_SECTOR  WINDOW_SECTOR

%DEFINE WindowAddress  DefineWindow

%DEFINE Window_Bar	          3000h
%DEFINE Window_Width          3001h
%DEFINE Window_Height         3003h
%DEFINE Window_PositionX      3005h
%DEFINE Window_PositionY      3007h
%DEFINE Window_Bar_Color      3009h
%DEFINE Window_Border_Color   300Ah
%DEFINE Window_Back_Color     300Bh
%DEFINE ButtonClose           300Ch
%DEFINE ButtonMaximize        300Dh
%DEFINE ButtonMinimize        300Eh
%DEFINE Window_Border         300Fh
%DEFINE Window_Border_Right   3010h
%DEFINE Window_Border_Left    3011h
%DEFINE Window_Border_Up      3012h
%DEFINE Window_Border_Down    3013h

%DEFINE Window_Exist          3014h    
%DEFINE Field_Exist           3015h
%DEFINE Button_Exist          3016h

BackInitialPositionX    dw 0000h  
BackInitialPositionY    dw 0000h  

StateWindowBar        dw 0000h
SavePositionX         dw 0000h
SavePositionY         dw 0000h
SaveWidth             dw 0000h
SaveHeight            dw 0000h

CountPositions dw 0000h ;end



; Construção de janelas
; ___________________________________________

%MACRO __CreateWindow 11
	mov byte[fs:Window_Bar], %1
	mov byte[fs:ButtonClose], %2
	mov byte[fs:ButtonMaximize], %3
	mov byte[fs:ButtonMinimize], %4
	mov byte[fs:Window_Bar_Color], %5
	mov byte[fs:Window_Border_Color], %6
	mov byte[fs:Window_Back_Color], %7
	mov word[fs:Window_PositionX], %8
	mov word[fs:Window_PositionY], %9
	mov word[fs:Window_Width], %10
	mov word[fs:Window_Height], %11
%ENDMACRO

%MACRO __ShowWindow 1
	mov byte[fs:Window_Exist], %1
	pusha
	call WindowAddress
	popa
	mov byte[fs:Window_Border], 0
%ENDMACRO

; ___________________________________________

; Definição de bordas individuais
; ___________________________________________

%MACRO __CreateBorder 4
	mov byte[fs:Window_Border], 1
	mov byte[fs:Window_Border_Up], %1
	mov byte[fs:Window_Border_Right], %2
	mov byte[fs:Window_Border_Down], %3
	mov byte[fs:Window_Border_Left], %4
%ENDMACRO
; ___________________________________________


; Construção de campos de textos
; ___________________________________________
%MACRO __CreateField 8
	__CreateWindow 0,0,0,0,0, %3, %4, %5, %6, %7, %8
	mov byte[fs:BS_COLOR], %4
	mov si, QuantKey_%1 ;analise
	mov di, C_%1
	call SavePositions
	jmp JmpValue%1
	QuantKey_%1 dw 0000h
	C_%1 times 50 db 0;analise
JmpValue%1:
%ENDMACRO

%MACRO __ShowField 1
	mov byte[fs:Field_Exist], %1
	pusha
	call WindowAddress
	popa
	mov byte[fs:Window_Border], 0
%ENDMACRO
; ___________________________________________

; Construção de botões
; ___________________________________________

%MACRO __CreateButton 8
	__CreateWindow 0,0,0,0,0, %3, %4, %5, %6, %7, %8
	jmp JmpValue%1
	%1 db %2
JmpValue%1:
%ENDMACRO

%MACRO __ShowButton 1
	mov byte[fs:Button_Exist], %1
	pusha
	call WindowAddress
	popa
	mov byte[fs:Window_Border], 0
%ENDMACRO

SavePositions:
	push bx
	push cx
	mov cx, bx ;%6
	xor bx, bx
	mov bx, word[CountPositions]
	mov word[fs:POSITIONS + bx], ax ;%5
	sub word[fs:POSITIONS + bx], 4
	add word[CountPositions], 2
	mov bx, word[CountPositions]
	mov word[fs:POSITIONS + bx], cx
	add word[CountPositions], 2
	pop cx
	push cx
	mov word[fs:LIMIT_COLW], ax ;%5
	add word[fs:LIMIT_COLW], cx
	sub word[fs:LIMIT_COLW], 4
	mov cx, word[fs:LIMIT_COLW]
	mov bx, word[CountPositions]
	mov word[fs:POSITIONS + bx], cx
	add word[CountPositions], 2
	mov word[fs:LIMIT_COLX], ax ;%5
	mov cx, word[fs:LIMIT_COLX]
	mov bx, word[CountPositions]
	mov word[fs:POSITIONS + bx], cx
	add word[CountPositions], 2
	mov bx, word[CountPositions]
	mov word[fs:POSITIONS + bx], si
	add word[CountPositions], 2
	mov bx, word[CountPositions]
	mov word[fs:POSITIONS + bx], di
	add word[CountPositions], 2
	inc byte[fs:QUANT_FIELD]
	pop cx
	pop bx
ret
; ___________________________________________

%ENDIF